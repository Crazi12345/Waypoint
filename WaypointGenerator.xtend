/*
 * generated by Xtext 2.38.1
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.mydsl.waypoint.M

/**
 * Generates code from your model files on save.
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WaypointGenerator extends AbstractGenerator {

/*
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' +
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	}
*/

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context)
	{
		for (mission : resource.allContents.toIterable.filter(typeof(M)))
		{
			fsa.generateFile(mission.name + ".py", generateMission(mission));
		}
	}

	def generateMission(M mission)

	// Xtend multiline template string (keybinding for special signs: ctrl + <)
	'''
		print("Mission: «mission.name»")
		print("Time: «mission.time1» «mission.time2»")

		print("Drones: ")
		«FOR drone : mission.drones»
			 print("- «drone.name» (Param: «drone.param1», «drone.param2»)")
		«ENDFOR»

		print("Waypoints:")
		«FOR waypoint : mission.waypoints»
			 print("«waypoint.name» (Param: «waypoint.param»)")
		«ENDFOR»

		print("Commands:")
		«FOR command : mission.commands»
			print("- «command.name»")
		«ENDFOR»
	'''

	// String concatenation
	/* def generateMission(M mission)
	{
    	var result = "print(Mission: " + mission.name + ")\n"
    	result += "Time: " + mission.time1 + " - " + mission.time2 + "\n\n"

    	result += "Drones:\n"
    	for (drone : mission.drones)
    	{
        	result += "    - " + drone.name + " (Params: " + drone.param1 + ", " + drone.param2 + ")\n"
    	}

	    result += "\nWaypoints:\n"
	    for (waypoint : mission.waypoints)
	    {
	        result += "    - " + waypoint.name + " (Param: " + waypoint.param + ")\n"
	    }

	    result += "\nCommands:\n"
	    for (command : mission.commands)
	    {
	        result += "    - " + command.name + "\n"
	    }

	    return result
	} */
}
